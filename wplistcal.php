<?php
/*
Plugin Name: WPListCal
Plugin URI: http://www.jonathankern.com/code/wplistcal
Description: WPListCal will display a simple listing of events anywhere on your Wordpress site.
Version: 1.0.8.1
Author: Jonathan Kern
Author URI: http://www.jonathankern.com

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant and author attributions, this restriction, and the
following disclaimer, must be included in all copies of the Software, in
whole or in part, and all derivative works of the Software, unless such
copies or derivative works are solely in the form of machine-executable 
object code generated by a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

define("WPLC_DB_VERSION", "1.0.6");
$wplc_domain = "wplistcal";
$wplc_is_setup = false;

// If not running PHP5, define str_ireplace()
if(!function_exists("str_ireplace")) {
	function str_ireplace($search, $replace, $subject) {
	   $i = 0;
	   while($pos = strpos(strtolower($subject), $search, $i)) {
	       $subject = substr($subject, 0, $pos).$replace.substr($subject, $pos+strlen($search));
	       $i = $pos+strlen($replace);
	   }
	   return $subject;
	}
}

if(!function_exists("htmlspecialchars_decode")) {
	function htmlspecialchars_decode($string,$style=ENT_COMPAT) {
		$translation = array_flip(get_html_translation_table(HTML_SPECIALCHARS,$style));
		if($style === ENT_QUOTES){ $translation['&#039;'] = '\''; }
		return strtr($string,$translation);
	}
}

if(!$wplc_is_included) {
	$wplc_is_included = true;
	
	// Localization setup
	function wplc_setup() {
		global $wplc_domain, $wplc_is_setup;
		if($wplc_is_setup)
			return;
		load_plugin_textdomain($wplc_domain, 'wp-content/plugins');
		$wplc_is_setup = true;
	}

	// Plugin DB Installation
	function wplc_install() {
		wplc_setup();
		global $wpdb, $wplc_domain;
	
		$tbl_name = $wpdb->prefix."wplistcal";
	
		// Check if DB exists and add it if necessary
		if($wpdb->get_var("SHOW TABLES LIKE '$tbl_name'") != $tbl_name) {
			$sql = "CREATE TABLE ".$tbl_name."(
				id mediumint(9) NOT NULL AUTO_INCREMENT,
				event_name text NOT NULL,
				event_link text,
				event_desc text,
				event_start_time bigint(11) DEFAULT '0' NOT NULL,
				event_end_time bigint(11) DEFAULT '0' NOT NULL,
				PRIMARY KEY  id (id)
			);";
		
			require_once(ABSPATH.'wp-admin/upgrade-functions.php');
			dbDelta($sql);
		
			// Add dummy data
			$welcome_event_name = __("Add events to WPListCal", $wplc_domain);
			$welcome_event_desc = __("Congratulations, you've just installed WPListCal! Now you just need to add your events into the system via the event tab in the Write area of the admin panel.", $wplc_domain);
			$welcome_event_start_time = time();
			$welcome_event_end_time = time() + 3600;
		
			$insert = "INSERT INTO ".$tbl_name.
					  " (event_name, event_desc, event_start_time, event_end_time) ".
					  "VALUES('".$wpdb->escape($welcome_event_name)."',
							  '".$wpdb->escape($welcome_event_desc)."',
							  '".$wpdb->escape($welcome_event_start_time)."',
							  '".$wpdb->escape($welcome_event_end_time)."');";
			$results = $wpdb->query($insert);
		}
		
		// If an option already exists, these functions do nothing
		add_option("wplc_db_version", WPLC_DB_VERSION);
		add_option("wplc_tbl_name", $tbl_name);
		add_option("wplc_date_format", "M j, Y g:ia");
		add_option("wplc_display_mode", "list");
		add_option("wplc_event_format", "<strong>%LINKEDNAME%</strong> &mdash; %START% - %END%\n<div style='margin-left:20px;'>%DESCRIPTION%</div>");
		add_option("wplc_max_events", -1);
		add_option("wplc_advance_days", -1);
		add_option("wplc_show_past_events", false);
		add_option("wplc_manage_items_per_page", 25);
		add_option("wplc_use_24hr_time", false);
		add_option("wplc_open_links_in_new_window", false);
		add_option("wplc_event_order", "asc");
		add_option("wplc_hide_same_date", true);
		add_option("wplc_date2_time_format", "g:ia");
		add_option("wplc_nofollow_links", true);
		add_option("wplc_no_events_msg", "");
		
		wplc_upgrade_if_needed();
	}

	register_activation_hook(__FILE__, "wplc_install");
	
	// Upgrades the database schema if necessary
	function wplc_upgrade_if_needed() {
		global $wpdb;
		$installed_ver = get_option("wplc_db_version");
		if($installed_ver != WPLC_DB_VERSION) {
			$tbl_name = $wpdb->prefix."wplistcal";
			require_once(ABSPATH."wp-admin/includes/upgrade.php");
			
			// v1.0 -> v1.0.6
			$sql = "ALTER TABLE $tbl_name ADD event_link text;";
			maybe_add_column($tbl_name, "event_link", $sql);
			
			update_option("wplc_db_version", WPLC_DB_VERSION);
		}
	}

	// Show the event list
	//----------------------------------------------------------------------------------------------
	// Parameters (all optional - defaults are defined on the options page):
	// display_mode (string): Either "list" or "table"
	// event_format (string): The format of the event string. You can use %NAME%, %LINK%, %LINKEDNAME%, %DESCRIPTION%,
	//	  %START%, and %END% to include event data
	// date_format (string): The format for dates/times. Use the PHP date() format just like
	//	  Wordpress options. Instructions available at http://us.php.net/manual/en/function.date.php
	// max_events (int):  the maximum number of events to display, defaults to -1 (show all)
	// show_past_events (bool): whether to show past events, defaults to false
	// advance_days (int): the amount of days in advance to display events, -1 for no limit
	// event_order (string): Either "asc" or "desc". "asc" shows the closest event first, 
	//    "desc" shows the furthest event first
 	// hide_same_date (bool): whether to hide the second date if it is on the same day, defaults to true
	// date2_time_format (string): if hide_same_date is true, then format the second timestamp with this
	// no_events_msg (string): The message to show if there are no events to display, empty string for none
	function wplc_show_events($display_mode=null, $event_format=null, $date_format=null, $max_events=null, $show_past_events=null, $advance_days=null, $event_order=null, $hide_same_date=null, $date2_time_format=null, $no_events_msg=null) {
		wplc_setup();
		global $wplc_domain, $wpdb;
	
		// Setup default parameter values
		wplc_set_if_null($display_mode, "wplc_display_mode");
		wplc_set_if_null($event_format, "wplc_event_format");
		wplc_set_if_null($date_format, "wplc_date_format");
		wplc_set_if_null($max_events, "wplc_max_events");
		wplc_set_if_null($advance_days, "wplc_advance_days");
		wplc_set_if_null($show_past_events, "wplc_show_past_events");
		wplc_set_if_null($hide_same_date, "wplc_hide_same_date");
		wplc_set_if_null($date2_time_format, "wplc_date2_time_format");
		wplc_set_if_null($no_events_msg, "wplc_no_events_msg");
		wplc_set_if_null($event_order, "wplc_event_order");
	
		$max_events = intval($max_events);
		if($max_events == 0) {
			$max_events = -1;
		}
		$advance_days = intval($advance_days);
		if($advance_days == 0) {
			$advance_days = -1;
		}
		if(!is_bool($show_past_events)) {
			$show_past_events = $show_past_events == "true";
		}

		$tbl_name = get_option("wplc_tbl_name");
	
		// Get events from DB
		$whered = false;
		$sql = "SELECT id, event_name, event_link, event_desc, event_start_time, event_end_time FROM $tbl_name";
		if(!$show_past_events) {
			$sql .= " WHERE event_end_time >= ".time();
			$whered = true;
		}
		if($advance_days > -1) {
			if($whered)
				$sql .= " AND ";
			else
				$sql .= " WHERE ";
			
			$sql .= "event_start_time < ".(time() + ($advance_days * 3600 * 24));
		}
		
		if($event_order == "asc") {
			$order = "ASC";
		}
		else {
			$order = "DESC";
		}
		
		$sql .= " ORDER BY event_start_time ".$order.", event_end_time ".$order;
		
		if($max_events > -1)
			$sql .= " LIMIT ".$max_events;
		
		$events = $wpdb->get_results($wpdb->escape($sql), ARRAY_A);
		
		if(!empty($no_events_msg) && count($events) == 0) {
			return $no_events_msg;
		}
	
		// Print events
		if($display_mode == "list")
			$ret = "<ul class='wplc_event_list'>\n";
		elseif($display_mode == "table")
			$ret = "<table class='wplc_table'><tbody>";
		for($i=0; $i<count($events); $i++) {
			// Prepare event string
			$start = date($date_format, $events[$i]['event_start_time']);
			$end = date($date_format, $events[$i]['event_end_time']);
			// Check for same date
			if($hide_same_date) {
				$start_date = date("Ymd", $events[$i]['event_start_time']);
				$end_date = date("Ymd", $events[$i]['event_end_time']);
				
				if($start_date == $end_date) {
					$end = date($date2_time_format, $events[$i]['event_end_time']);
				}
			}
			$cleaned_name = str_replace(" & ", " &amp; ", str_replace('"', "&quot;", stripslashes(stripslashes($events[$i]['event_name']))));
			$cleaned_desc = nl2br(htmlspecialchars_decode(str_replace(" & ", " &amp; ", str_replace('"', "&quot;", stripslashes(stripslashes($events[$i]['event_desc']))))));
			$cleaned_link = htmlspecialchars(stripslashes(stripslashes($events[$i]['event_link'])));
			$target = get_option("wplc_open_links_in_new_window") == "true" ? " target='_blank'" : "";
			$nofollow = get_option("wplc_nofollow_links") == "true" ? " rel='nofollow'" : "";
			$linked_name = empty($cleaned_link) ? $cleaned_name : "<a href='".$cleaned_link."'".$target.$nofollow.">".$cleaned_name."</a>";
		
			if($display_mode == "list") {
				$evt = str_replace("%NAME%", $cleaned_name, $event_format);
				$evt = str_replace("%LINK%", $cleaned_link, $evt);
				$evt = str_replace("%LINKEDNAME%", $linked_name, $evt);
				$evt = str_replace("%DESCRIPTION%", $cleaned_desc, $evt);
				$evt = str_replace("%START%", $start, $evt);
				$evt = str_replace("%END%", $end, $evt);
				$evt = str_replace("%ID%", $events[$i]['id'], $evt);
				$ret .= "<li".(($i % 2 == 1) ? " class='wplc_alt'" : "").">".$evt."</li>";
			}
			elseif($display_mode == "table") {
				$ret .= "<tr".(($i % 2 == 1) ? " class='wplc_alt'" : "").">\n\t"
							."<td class='wplc_event_name'>".$linked_name."</td>\n\t"
							."<td class='wplc_event_start_time'>".$start."</td>\n\t"
							."<td class='wplc_event_end_time'>".$end."</td>\n"
						."</tr>\n"
						."<tr".(($i % 2 == 1) ? " class='wplc_alt'" : "").">\n\t"
							."<td class='wplc_event_desc' colspan='3'>".$cleaned_desc."</td>\n"
						."</tr>";
			}
		}
		if($display_mode == "list")
			$ret .= "</ul>";
		elseif($display_mode == "table")
			$ret .= "</tbody></table>";
		return $ret;
	}
	
	// Content filter to place a calendar on a post or page
	add_filter("the_content", "wplc_content_filter");
	function wplc_content_filter($content) {
		return str_ireplace("<!--wplistcal-->", wplc_show_events(), $content);
	}

	function wplc_set_if_null(&$var, $option_id) {
		if(is_null($var))
			$var = get_option($option_id);
	}

	// TODO: Change this to work in 2.7
	if($_GET['page'] == plugin_basename(__FILE__) && basename($_SERVER['PHP_SELF']) == "post-new.php") {
		add_action( 'admin_head', 'wp_tiny_mce' );
	}
	function wplc_show_event_form($event=array(), $message=null) {
		wplc_setup();
		global $wplc_domain;
		
		wplc_upgrade_if_needed();
		
		$editing = count($event) != 0;
		
		$use_24hr_time = get_option("wplc_use_24hr_time");
		if(!is_bool($use_24hr_time)) {
			$use_24hr_time = $use_24hr_time == "true";
		}
	
		// Prep event times
		$d = $event['event_start_time'];
		if(empty($d))
			$d = time();
		$date['event_start_month'] = date('n', $d);
		$date['event_start_day'] = date('j', $d);
		$date['event_start_year'] = date('Y', $d);
		if($use_24hr_time)
			$date['event_start_hour'] = date('G', $d);
		else
			$date['event_start_hour'] = date('g', $d);
		$date['event_start_minute'] = date('i', $d);
		if(!$use_24hr_time)
			$date['event_start_ampm'] = date('A', $d);
		
		$d = $event['event_end_time'];
		if(empty($d))
			$d = time() + 3600;
		$date['event_end_month'] = date('n', $d);
		$date['event_end_day'] = date('j', $d);
		$date['event_end_year'] = date('Y', $d);
		if($use_24hr_time)
			$date['event_end_hour'] = date('G', $d);
		else
			$date['event_end_hour'] = date('g', $d);
		$date['event_end_minute'] = date('i', $d);
		if(!$use_24hr_time)
			$date['event_end_ampm'] = date('A', $d);
			
		get_currentuserinfo();
		global $user_ID;
		
		if(!is_null($message)) {
		?>
			<div id="message" class="updated fade">
				<p>
					<?php echo $message; ?>
				</p>
			</div>
		<?php
		}
		?>
		<div class="wrap">
			<h2><?php echo $editing ? __("Edit Event", $wplc_domain) : __("Add Event", $wplc_domain); ?></h2>
			<form name="event" id="event" method="post" action="<?php echo $_SERVER['REQUEST_URI']; ?>">
				<input type="hidden" id="user-id" name="user_ID" value="<?php echo (int) $user_ID ?>" />
				<div id="poststuff">
					<div class="submitbox" id="submitpost">
						<div id="previewview">
							<h4 style="color:white;margin:0;padding:0"><?php _e('Event Status', $wplc_domain); ?></h4>
						</div>
						<div class="inside">
							&nbsp;
						</div>
						<p class="submit">
							<input type="submit" name="save" id="save-post" value="<?php _e('Save', $wplc_domain); ?>" tabindex="15" class="button button-highlighted" />
							<?php
							if($editing) {
								$dellink = "edit.php?page=".$_GET['page']."&op=delete&id=".$event['id'];
								$dellink = (function_exists('wp_nonce_url')) ? wp_nonce_url($dellink, 'wplc-delete-event') : $dellink;
								echo "<a class='submitdelete' href='".$dellink."' onclick=\"if(confirm('".__('You are about to delete this event \\\''.stripslashes($event['event_name']).'\\\'\n \\\'Cancel\\\' to stop, \\\'OK\\\' to delete.', $wplc_domain)."')) { return true; } return false;\">".__("Delete Event", $wplc_domain)."</a>";
							}
							?>
						</p>
						<div class="side-info">
							<h5>Related</h5>
							<ul>
								<li><a href="edit.php?page=<?php echo $_GET['page']; ?>"><?php _e('Manage Events', $wplc_domain); ?></a></li>
								<?php 
									get_currentuserinfo();
									global $user_level;
									if($user_level > 6) {
								?>
								<li><a href="options-general.php?page=<?php echo $_GET['page']; ?>"><?php _e('WPListCal Options', $wplc_domain); ?></a></li>
								<?php } ?>
							</ul>
						</div>
					</div>
					<div id="post-body">
						<input type="hidden" name="action" value="submitted" />
						<?php
						if($editing) {
						?>
							<input type="hidden" name="id" value="<?php echo $event['id']; ?>" />
						<?php
						}
						?>
						<div id="titlediv" class="wplc_eventformfield">
							<h3><?php _e('Event Name', $wplc_domain); ?></h3>
							<div id="titlewrap">
								<input type="text" name="event_name" size="30" tabindex="1" value="<?php echo stripslashes(stripslashes($event['event_name'])); ?>" id="title" />
							</div>
						</div>
						
						<div id="linkdiv" class="wplc_eventformfield">
							<h3><?php _e('Link', $wplc_domain); ?></h3>
							<div id="linkwrap">
								<input type="text" name="event_link" size="30" tabindex="2" value="<?php echo stripslashes(stripslashes($event['event_link'])); ?>" id="link" />
							</div>
						</div>

						<div id="startdiv" class="wplc_eventformfield">
							<h3><?php _e('Start Date/Time', $wplc_domain); ?></h3>
							<div id="startwrap">
								<?php
									$s[$date['event_start_month']] = " selected='selected'";
								?>
								<select name="start-month" id="start-month" onchange="wplc_matchValue('start-month', 'end-month', true);" tabindex="3">
									<option value="1"<?php echo $s['1']; ?>><?php _e('Jan', $wplc_domain); ?></option>
									<option value="2"<?php echo $s['2']; ?>><?php _e('Feb', $wplc_domain); ?></option>
									<option value="3"<?php echo $s['3']; ?>><?php _e('Mar', $wplc_domain); ?></option>
									<option value="4"<?php echo $s['4']; ?>><?php _e('Apr', $wplc_domain); ?></option>
									<option value="5"<?php echo $s['5']; ?>><?php _e('May', $wplc_domain); ?></option>
									<option value="6"<?php echo $s['6']; ?>><?php _e('Jun', $wplc_domain); ?></option>
									<option value="7"<?php echo $s['7']; ?>><?php _e('Jul', $wplc_domain); ?></option>
									<option value="8"<?php echo $s['8']; ?>><?php _e('Aug', $wplc_domain); ?></option>
									<option value="9"<?php echo $s['9']; ?>><?php _e('Sep', $wplc_domain); ?></option>
									<option value="10"<?php echo $s['10']; ?>><?php _e('Oct', $wplc_domain); ?></option>
									<option value="11"<?php echo $s['11']; ?>><?php _e('Nov', $wplc_domain); ?></option>
									<option value="12"<?php echo $s['12']; ?>><?php _e('Dec', $wplc_domain); ?></option>
								</select>
								<input type="text" name="start-day" id="start-day" size="2" maxlength="2" value="<?php echo $date['event_start_day']; ?>" tabindex="4" onblur="wplc_matchValue('start-day', 'end-day', false);" />
								<input type="text" name="start-year" id="start-year" size="4" maxlength="4" value="<?php echo $date['event_start_year']; ?>" tabindex="5" onblur="wplc_matchValue('start-year', 'end-year', false);" />
								@ <input type="text" name="start-hour" id="start-hour" size="2" maxlength="2" value="<?php echo $date['event_start_hour']; ?>" tabindex="6" onblur="wplc_matchValue('start-hour', 'end-hour', false);" />
								: <input type="text" name="start-minute" id="start-minute" size="2" maxlength="2" value="<?php echo $date['event_start_minute']; ?>" tabindex="7" onblur="wplc_matchValue('start-minute', 'end-minute', false);" />
								<?php
									if(!$use_24hr_time) {
										$s[$date['event_start_ampm']] = " selected='selected'";
								?>
								<select name="start-ampm" id="start-ampm" tabindex="8" onchange="wplc_matchValue('start-ampm', 'end-ampm', true);">
									<option value="AM"<?php echo $s['AM']; ?>>AM</option>
									<option value="PM"<?php echo $s['PM']; ?>>PM</option>
								</select>
								<?php
									}
								?>
							</div>
						</div>
		
						<div id="enddiv" class="wplc_eventformfield">
							<h3><?php _e('End Date/Time', $wplc_domain); ?></h3>
							<div id="endwrap">
								<?php
									unset($s);
									$s[$date['event_end_month']] = " selected='selected'";
								?>
								<select name="end-month" tabindex="9" id="end-month" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;">
									<option value="1"<?php echo $s['1']; ?>><?php _e('Jan', $wplc_domain); ?></option>
									<option value="2"<?php echo $s['2']; ?>><?php _e('Feb', $wplc_domain); ?></option>
									<option value="3"<?php echo $s['3']; ?>><?php _e('Mar', $wplc_domain); ?></option>
									<option value="4"<?php echo $s['4']; ?>><?php _e('Apr', $wplc_domain); ?></option>
									<option value="5"<?php echo $s['5']; ?>><?php _e('May', $wplc_domain); ?></option>
									<option value="6"<?php echo $s['6']; ?>><?php _e('Jun', $wplc_domain); ?></option>
									<option value="7"<?php echo $s['7']; ?>><?php _e('Jul', $wplc_domain); ?></option>
									<option value="8"<?php echo $s['8']; ?>><?php _e('Aug', $wplc_domain); ?></option>
									<option value="9"<?php echo $s['9']; ?>><?php _e('Sep', $wplc_domain); ?></option>
									<option value="10"<?php echo $s['10']; ?>><?php _e('Oct', $wplc_domain); ?></option>
									<option value="11"<?php echo $s['11']; ?>><?php _e('Nov', $wplc_domain); ?></option>
									<option value="12"<?php echo $s['12']; ?>><?php _e('Dec', $wplc_domain); ?></option>
								</select>
								<input type="text" name="end-day" id="end-day" size="2" maxlength="2" value="<?php echo $date['event_end_day']; ?>" tabindex="10" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;" />
								<input type="text" name="end-year" id="end-year" size="4" maxlength="4" value="<?php echo $date['event_end_year']; ?>" tabindex="11" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;" />
								@ <input type="text" name="end-hour" id="end-hour" size="2" maxlength="2" value="<?php echo $date['event_end_hour']; ?>" tabindex="12" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;" />
								: <input type="text" name="end-minute" id="end-minute" size="2" maxlength="2" value="<?php echo $date['event_end_minute']; ?>" tabindex="13" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;" />
								<?php
									if(!$use_24hr_time) {
										$s[$date['event_end_ampm']] = " selected='selected'";
								?>
								<select name="end-ampm" id="end-ampm" tabindex="14" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;">
									<option value="AM"<?php echo $s['AM']; ?>>AM</option>
									<option value="PM"<?php echo $s['PM']; ?>>PM</option>
								</select>
								<?php
									}
								?>
							</div>
						</div>
		
						<div id="<?php echo user_can_richedit() ? 'postdivrich' : 'postdiv'; ?>" class="wplc_eventformfield postarea">
							<h3><?php _e('Description', $wplc_domain); ?></h3>
							<div id="descriptionwrap">
								<?php
									the_editor(stripslashes(stripslashes($event['event_desc'])) /*content*/, "content" /*fieldId*/, "end-ampm" /*previousfieldId*/, false /*media_upload*/, 15);
								?>
							</div>
						</div>
					</div>
				</div>
			</form>
		</div>
		<?php
	}

	function wplc_process_event($postvars) {
		wplc_setup();
		global $wplc_domain, $wpdb;
	
		$gobacktoeditform = !empty($postvars['save']);
	
		$name = addslashes($postvars['event_name']);
		$link = addslashes($postvars['event_link']);
		$description = addslashes($postvars['content']);
		
		$tbl_name = $wpdb->escape(get_option("wplc_tbl_name"));
	
		// Get timestamps from date/time info
		$startstr = addslashes($postvars['start-year'])."-".
					$postvars['start-month']."-".
					addslashes($postvars['start-day'])." ".
					addslashes($postvars['start-hour']).":".
					addslashes($postvars['start-minute']).
					$postvars['start-ampm'];
		$endstr = addslashes($postvars['end-year'])."-".
					$postvars['end-month']."-".
					addslashes($postvars['end-day'])." ".
					addslashes($postvars['end-hour']).":".
					addslashes($postvars['end-minute']).
					$postvars['end-ampm'];
		$start = strtotime($startstr);
		$end = strtotime($endstr);
	
		// Validation & Error Handling
		// If name is empty, just refresh the post page
		if(empty($name)) {
			wplc_show_event_form();
			return;
		}
		// If start time is invalid, use NOW
		if($start === -1 || $start === false)
			$start = time();
		// If end time is invalid, use start
		if($end === -1 || $end === false)
			$end = $start;
		// If end is before start time, set end to start
		if($end < $start)
			$end = $start;
		
		// Add data to db
		if(empty($postvars['id'])) {
			$insert = "INSERT INTO ".$tbl_name.
					  " (event_name, event_link, event_desc, event_start_time, event_end_time) ".
					  "VALUES('".$wpdb->escape($name)."',
							  '".$wpdb->escape($link)."',
							  '".$wpdb->escape($description)."',
							  '".$wpdb->escape($start)."',
							  '".$wpdb->escape($end)."');";
			$results = $wpdb->query($insert);
		}
		else {
			$update = "UPDATE ".$tbl_name.
				  	  " SET event_name='".$wpdb->escape($name)."',".
					  "event_link='".$wpdb->escape($link)."',".
					  "event_desc='".$wpdb->escape($description)."',".
					  "event_start_time='".$wpdb->escape($start)."',".
					  "event_end_time='".$wpdb->escape($end)."' ".
					  "WHERE id=".$wpdb->escape($postvars['id']);
			$results = $wpdb->query($update);
		}
		
		$msg = empty($postvars['id']) ? __("Event Added", $wplc_domain) : __("Event Updated", $wplc_domain);
		
		if($gobacktoeditform) {
			$id = empty($postvars['id']) ? $wpdb->insert_id : $postvars['id'];
			$sql = "SELECT * FROM ".$wpdb->escape(get_option("wplc_tbl_name"))." WHERE id=".$wpdb->escape($id);
			$event = $wpdb->get_results($sql, ARRAY_A);
	
			// Show edit form
			wplc_show_event_form($event[0], $msg);
		}
		else {
			wplc_show_event_form(array(), $msg);
		}
	}

	function wplc_show_admin_write_page() {
		wplc_setup();
		global $wplc_domain;
	
		if(isset($_GET['id'])) {
			wplc_show_admin_edit_page($_GET['id']);
			return;
		}
	
		$action = $_POST['action'];
		if($action == "submitted") {
			wplc_process_event($_POST);
		}
		else
			wplc_show_event_form();
	}

	add_action('admin_menu', 'wplc_add_admin_pages');
	function wplc_add_admin_pages() {
		wplc_setup();
		global $wplc_domain;
		
		add_submenu_page("post.php", __("WPListCal - Add Event", $wplc_domain), __("Event", $wplc_domain), 2, __FILE__, "wplc_show_admin_write_page");
		add_management_page(__("WPListCal - Manage Events", $wplc_domain), __("Events", $wplc_domain), 2, __FILE__, "wplc_show_admin_manage_page");
		
		get_currentuserinfo();
		global $user_level;
		if($user_level > 6) {
			add_options_page(__("WPListCal - Options", $wplc_domain), __("WPListCal", $wplc_domain), 6, __FILE__, "wplc_show_admin_options_page");
		}
	}
	
	add_action('admin_print_scripts', 'wplc_js_admin_header');
	function wplc_js_admin_header() {
		wp_print_scripts(array('sack'));
		if (user_can_richedit()) {
		    wp_enqueue_script('editor');
		}
		wp_enqueue_script('thickbox');
		wp_enqueue_script('media-upload');
		?>
		<script type="text/javascript" charset="utf-8">
		//<![CDATA[
		function wplcDeleteEvent(id, msg) {
			if(confirm(msg)) {
				var mysack = new sack("<?php bloginfo( 'wpurl' ); ?>/wp-admin/admin-ajax.php" );
				mysack.execute = 1;
				mysack.method = 'POST';
				mysack.setVar("action", "wplc_delete_event");
				mysack.setVar("id", id);
				mysack.encVar("cookie", document.cookie, false);
				mysack.onError = function() { alert('AJAX error in deleting event'); };
				mysack.onCompletion = function() { 
					if(mysack.responseStatus[0] == 200) {
						var row = document.getElementById('event-'+id);
						if(row != null && row.parentNode != null)
							row.parentNode.removeChild(row);
					}	
				}
				mysack.runAJAX();
				
				return true;
			}
		}
		
		function wplc_changeDisabled(id, disabled) {
			var elm = document.getElementById(id);
			if(elm != null && elm.disabled != disabled)
				elm.disabled = disabled;
		}
		
		var fieldsDirty = false;
		var editable = false;
		function wplc_matchValue(myid, matchid, isselect) {
			if(fieldsDirty)
				return;
				
			var me = document.getElementById(myid);
			var you = document.getElementById(matchid);
			
			if(isselect) {
				you.selectedIndex = me.selectedIndex;
			}
			else {
				you.value = me.value;
			}
		}
		//]]>
		</script>
		<?php
	}
	
	add_action("admin_head", "wplc_admin_css");
	function wplc_admin_css() {
		?>
		
		<style type="text/css" media="screen">
			.wplc_eventformfield {
				margin: 10px 8px 20px 20px;
				padding: 0px;
				border-color: rgb(235, 235, 235);
			}
			#link {
				margin: 1px;
				padding: 0;
				border: 0;
				width: 100%;
				font-size: 1.7em;
				outline: none;
			}
			#linkwrap {
				border: 1px solid rgb(204, 204, 204);
				padding: 2px 3px;
			}
			.wplc_delete:hover {
				background-color: red;
				border-bottom: 1px solid red;
				color: white;
			}
		</style>
		<?php
	}
	
	add_action("wp_ajax_wplc_delete_event", "wplc_delete_event");
	function wplc_delete_event($id=null) {
		wplc_setup();
		global $wplc_domain, $wpdb;
		
		if($id == null)
			$id = $wpdb->escape($_POST['id']);
			
		$tbl_name = $wpdb->escape(get_option("wplc_tbl_name"));
		
		$sql = "DELETE FROM ".$tbl_name." WHERE id=".$id;
		$wpdb->query($sql);
	}

	function wplc_show_admin_manage_page() {
		wplc_setup();
		global $wplc_domain, $wpdb;
		
		if($_POST['action'] == "delete") {
			wplc_delete_event($_POST['id']);
			return;
		}
		
		if($_GET['op'] == 'delete') {
			if(function_exists('wp_nonce_url')) {
				check_admin_referer('wplc-delete-event');
			}
			
			wplc_delete_event($_GET['id']);
			
			// Set message
			$message = __("Event deleted", $wplc_domain);
		}
	
		$itemsperpage = get_option("wplc_manage_items_per_page");
		$page = $_GET['wplc_pg'];
		if(isset($page)) {
			$offset = $itemsperpage * ($page-1);
		}
		else {
			$offset = 0;
			$page = 1;
		}
		
		$use_24hr_time = get_option("wplc_use_24hr_time");
		if(!is_bool($use_24hr_time)) {
			$use_24hr_time = $use_24hr_time == "true";
		}
		
		// Check how many events there are
		$sql = "SELECT ID FROM ".$wpdb->escape(get_option("wplc_tbl_name"));
		$wpdb->query($sql);
		$totalevents = $wpdb->num_rows;
		
	
		// Get events for this page
		$sql = "SELECT id, event_name, event_start_time, event_end_time"
			 ." FROM ".$wpdb->escape(get_option("wplc_tbl_name"))
			 ." ORDER BY event_start_time DESC, event_end_time DESC"
			 ." LIMIT ".$wpdb->escape($offset).", ".$wpdb->escape($itemsperpage);
		$events = $wpdb->get_results($sql, ARRAY_A);
		
		if($use_24hr_time)
			$dateformat = 'D, M j, Y @ G:i';
		else
			$dateformat = 'D, M j, Y @ g:ia';
		
		$delmsg = __("You are about to delete the event \'%s\'. \\n\'OK\' to delete, \'Cancel\' to stop.", $wplc_domain);
		
		if(!is_null($message)) {
		?>
			<div id="message" class="updated fade">
				<p>
					<?php echo $message; ?>
				</p>
			</div>
		<?php
		}
		?>
		
		<div class="wrap">
			<h2><?php _e("Events", $wplc_domain); ?></h2>
			<div class="tablenav">
				<div class="tablenav-pages">
					<?php
					if($offset + $itemsperpage < $totalevents) {
						echo "<a href='edit.php?wplc_pg=".($page+1)."&amp;page=".$_GET['page']."'>";
						_e("&laquo; Previous Events", $wplc_domain);
						echo "</a>";
						$prevshown = true;
					}
					if($page > 1) {
						if($prevshown)
							echo " | ";
						echo "<a href='edit.php?wplc_pg=".($page-1)."&amp;page=".$_GET['page']."'>";
						_e("Next Events &raquo;", $wplc_domain);
						echo "</a>";
					}
					?>
				</div>
				<div class="alignleft" style="margin-top:3px;">
					<a href="post-new.php?page=<?php echo $_GET['page']; ?>"><?php _e('Add New Event &raquo;', $wplc_domain); ?></a>
				</div>
			</div>
			<br class="clear" />
			<table class="widefat">
				<thead>
					<tr>
						<th scope="col" style="text-align:center;"><?php _e("ID", $wplc_domain); ?></th>
						<th scope="col"><?php _e("Event Name", $wplc_domain); ?></th>
						<th scope="col"><?php _e("Start Date/Time", $wplc_domain); ?></th>
						<th scope="col"><?php _e("End Date/Time", $wplc_domain); ?></th>
						<th scope="col" colspan="2" style="text-align:center;"><?php _e("Action", $wplc_domain); ?></th>
					</tr>
				</thead>
				<tbody>
	
				<?php
				for($i=0; $i<count($events); $i++) {
					$class = $i % 2 == 0 ? " class='alternate'" : "";
					$start = date($dateformat, $events[$i]['event_start_time']);
					$end = date($dateformat, $events[$i]['event_end_time']);
				?>
	
					<tr id="event-<?php echo $events[$i]['id']; ?>" <?php echo $class; ?>>
						<th scope="row" style="text-align:center;" class="check-column"><?php echo $events[$i]['id']; ?></th>
						<td><a href="post-new.php?id=<?php echo $events[$i]['id']; ?>&amp;page=<?php echo $_GET['page']; ?>" class="row-title"><?php echo stripslashes(stripslashes($events[$i]['event_name'])); ?></a></td>
						<td><?php echo $start; ?></td>
						<td><?php echo $end; ?></td>
						<td><a href="post-new.php?id=<?php echo $events[$i]['id']; ?>&amp;page=<?php echo $_GET['page']; ?>" class="edit"><?php _e("Edit", $wplc_domain); ?></a></td>
						<td><a href="javascript:;" onclick="wplcDeleteEvent(<?php echo $events[$i]['id']; ?>, '<?php echo sprintf($delmsg, $events[$i]['event_name']); ?>');" class="wplc_delete"><?php _e("Delete", $wplc_domain); ?></a></td>
					</tr>
	
				<?php
				}
				?>
		
				</tbody>
			</table>
			<div class="tablenav">
				<div class="tablenav-pages">
					<?php
					if($offset + $itemsperpage < $totalevents) {
						echo "<a href='edit.php?wplc_pg=".($page+1)."&amp;page=".$_GET['page']."'>";
						_e("&laquo; Previous Events", $wplc_domain);
						echo "</a>";
						$prevshown = true;
					}
					if($page > 1) {
						if($prevshown)
							echo " | ";
						echo "<a href='edit.php?wplc_pg=".($page-1)."&amp;page=".$_GET['page']."'>";
						_e("Next Events &raquo;", $wplc_domain);
						echo "</a>";
					}
					?>
				</div>
				<div class="alignleft" style="margin-top:3px;">
					<a href="post-new.php?page=<?php echo $_GET['page']; ?>"><?php _e('Add New Event &raquo;', $wplc_domain); ?></a>
				</div>
			</div>
			<br class="clear" />
		</div>
		<?php
	}

	function wplc_show_admin_edit_page($id) {
		wplc_setup();
		global $wplc_domain, $wpdb;
	
		$action = $_POST['action'];
		if($action == "submitted") {
			wplc_process_event($_POST);
		}
		else {
			// Lookup event data for $id
			$sql = "SELECT * FROM ".$wpdb->escape(get_option("wplc_tbl_name"))." WHERE id=".$wpdb->escape($id);
			$event = $wpdb->get_results($sql, ARRAY_A);
	
			// Show edit form
			wplc_show_event_form($event[0]);
		}
	}
	
	function wplc_show_admin_options_page() {
		wplc_setup();
		global $wplc_domain;
		
		$use_24hr_time = get_option("wplc_use_24hr_time");
		if(!is_bool($use_24hr_time)) {
			$use_24hr_time = $use_24hr_time == "true";
		}
		
		$open_links_in_new_window = get_option("wplc_open_links_in_new_window");
		if(!is_bool($open_links_in_new_window)) {
			$open_links_in_new_window = $open_links_in_new_window == "true";
		}
		
		$hide_same_date = get_option("wplc_hide_same_date");
		if(!is_bool($hide_same_date)) {
			$hide_same_date = $hide_same_date == "true";
		}
		
		$nofollow_links = get_option("wplc_nofollow_links");
		if(!is_bool($nofollow_links)) {
			$nofollow_links = $nofollow_links == "true";
		}
		?>
		
		<div class="wrap">
			<form method="post" action="options.php">
				<?php wp_nonce_field('update-options'); ?>
				<h2><?php _e("WPListCal Options", $wplc_domain); ?></h2>
				<table class="form-table">
					<tr valign="top" id="displaymode">
						<th scope="row"><?php _e("Display Mode:", $wplc_domain); ?></th>
						<td>
							<input type="radio" name="wplc_display_mode" value="list" id="wplc_display_mode_list" onclick="wplc_changeDisabled('wplc_event_format', false);"<?php echo get_option('wplc_display_mode') == 'list' ? "checked='checked'" : ""; ?> />
								<label for="wplc_display_mode_list"><?php _e("Show events in an unordered list <em>(Default)</em>", $wplc_domain); ?></label>
							<br />
							<fieldset style="margin-left: 25px;border:none;">
								<legend style="float:left; margin-top:2px;"><?php _e("Event Format", $wplc_domain); ?> <a href="javascript:;" title="<?php _e("The following variables are available: %NAME%, %LINK%, %LINKEDNAME%, %START%, %END%, %DESCRIPTION%", $wplc_domain); ?>" style="cursor:help;">?</a>:</legend>
								<div>
									<textarea name="wplc_event_format" id="wplc_event_format" style="width:350px; height:50px;"<?php echo get_option('wplc_display_mode') == 'list' ? "" : "disabled='disabled'"; ?>><?php echo htmlentities(get_option('wplc_event_format')); ?></textarea>
								</div>
							</fieldset>
							<input type="radio" name="wplc_display_mode" value="table" id="wplc_display_mode_table" onclick="wplc_changeDisabled('wplc_event_format', true);"<?php echo get_option('wplc_display_mode') == 'table' ? "checked='checked'" : ""; ?> />
								<label for="wplc_display_mode_table"><?php _e("Show events in a table", $wplc_domain); ?></label>
						</td>
					</tr>
					<tr valign="top" id="dateformat">
						<th scope="row"><?php _e("Date/Time Format:", $wplc_domain); ?></th>
						<td>
							<input type="text" name="wplc_date_format" value="<?php echo get_option('wplc_date_format'); ?>" /><br />
							<strong><?php _e("Output:", $wplc_domain); ?></strong> <?php echo date(get_option('wplc_date_format'), time()); ?><br />
							<a href="http://codex.wordpress.org/Formatting_Date_and_Time">Documentation on date formatting.</a> Click &quot;Update Options&quot; to update sample output.
						</td>
					</tr>
					<tr valign="top" id="24hr_time">
						<th scope="row"><?php _e("12/24 Hour Time:", $wplc_domain); ?></th>
						<td>
							<input type="radio" name="wplc_use_24hr_time" id="wplc_use_24hr_time0" value="false"<?php echo $use_24hr_time ? '' : ' checked=\'checked\''; ?> />
							<label for="wplc_use_24hr_time0"><?php _e("Use 12 hour time (e.g. 1:35pm)", $wplc_domain); ?></label>
							<br />
							<input type="radio" name="wplc_use_24hr_time" id="wplc_use_24hr_time1" value="true"<?php echo $use_24hr_time ? ' checked=\'checked\'' : ''; ?> />
							<label for="wplc_use_24hr_time1"><?php _e("Use 24 hour time (e.g. 13:35)", $wplc_domain); ?></label>
							<br />
							<?php _e("What time-style to use in the admin area (does not affect what is displayed on your site)", $wplc_domain); ?>
						</td>
					</tr>
					<tr valign="top" id="hide_same_date">
						<th scope="row"><?php _e("End Date Options:", $wplc_domain); ?></th>
						<td>
							<input type="radio" name="wplc_hide_same_date" value="true" id="wplc_hide_same_date_true" onclick="wplc_changeDisabled('wplc_date2_time_format', false);"<?php echo $hide_same_date ? "checked='checked'" : ""; ?> />
								<label for="wplc_hide_same_date_true"><?php _e("If even starts and ends on the same day, use the time format below for the end date <em>(Default)</em>", $wplc_domain); ?></label>
							<br />
							<fieldset style="margin-left: 25px;border:none;">
								<legend style="float:left; margin-top:2px;"><?php _e("End Date Format", $wplc_domain); ?>:</legend>
								<div>
									<input type="text" name="wplc_date2_time_format" id="wplc_date2_time_format" value="<?php echo get_option('wplc_date2_time_format'); ?>"<?php echo $hide_same_date ? "" : "disabled='disabled'"; ?> />
								</div>
							</fieldset>
							<input type="radio" name="wplc_hide_same_date" value="false" id="wplc_hide_same_date_false" onclick="wplc_changeDisabled('wplc_date2_time_format', true);"<?php echo $hide_same_date ? "" : "checked='checked'"; ?> />
								<label for="wplc_hide_same_date_false"><?php _e("Use the same format for both start and end dates", $wplc_domain); ?></label>
						</td>
					</tr>
					<tr valign="top" id="maxevents">
						<th scope="row"><?php _e("Maximum Displayed Events:", $wplc_domain); ?></th>
						<td>
							<input type="text" name="wplc_max_events" size="4" value="<?php echo get_option('wplc_max_events'); ?>" /><br />
							<?php _e("How many events to display in the event list, -1 for no limit", $wplc_domain); ?>
						</td>
					</tr>
					<tr valign="top" id="advancenotice">
						<th scope="row"><?php _e("Maximum Advanced Notice:", $wplc_domain); ?></th>
						<td>
							<input type="text" name="wplc_advance_days" size="4" value="<?php echo get_option('wplc_advance_days'); ?>" /><br />
							<?php _e("How many days in advance to display events, -1 for no limit", $wplc_domain); ?>
						</td>
					</tr>
					<tr valign="top" id="showpastevents">
						<th scope="row"><?php _e("Past Events:", $wplc_domain); ?></th>
						<td>
							<input type="radio" name="wplc_show_past_events" value="false" id="wplc_show_past_events_false"<?php echo get_option('wplc_show_past_events') != 'true' ? "checked='checked'" : ""; ?> />
								<label for="wplc_show_past_events_false"><?php _e("Only show current and future events", $wplc_domain); ?></label>
							<br />
							<input type="radio" name="wplc_show_past_events" value="true" id="wplc_show_past_events_true"<?php echo get_option('wplc_show_past_events') == 'true' ? "checked='checked'" : ""; ?> />
								<label for="wplc_show_past_events_true"><?php _e("Show all events, even if they have already occurred", $wplc_domain); ?></label>
						</td>
					</tr>
					<tr valign="top" id="eventorder">
						<th scope="row"><?php _e("Event Order:", $wplc_domain); ?></th>
						<td>
							<input type="radio" name="wplc_event_order" value="asc" id="wplc_event_order_asc"<?php echo get_option('wplc_event_order') == 'asc' ? "checked='checked'" : ""; ?> />
								<label for="wplc_event_order_asc"><?php _e("Show the closest event first", $wplc_domain); ?></label>
							<br />
							<input type="radio" name="wplc_event_order" value="desc" id="wplc_event_order_desc"<?php echo get_option('wplc_event_order') == 'desc' ? "checked='checked'" : ""; ?> />
								<label for="wplc_event_order_desc"><?php _e("Show the furthest event first", $wplc_domain); ?></label>
						</td>
					</tr>
					<tr valign="top" id="no_events_msg">
						<th scope="row"><?php _e("No Events Message:", $wplc_domain); ?></th>
						<td>
							<input type="text" name="wplc_no_events_msg" size="30" value="<?php echo get_option('wplc_no_events_msg'); ?>" /><br />
							<?php _e("Message to show if there are no events, leave blank for none", $wplc_domain); ?>
						</td>
					</tr>
					<tr valign="top" id="adminperpage">
						<th scope="row"><?php _e("Admin Items Per Page:", $wplc_domain); ?></th>
						<td>
							<input type="text" name="wplc_manage_items_per_page" size="4" value="<?php echo get_option('wplc_manage_items_per_page'); ?>" /><br />
							<?php _e("How many events to display per page on the Manage Events admin page", $wplc_domain); ?>
						</td>
					</tr>
					<tr valign="top" id="open_links_in_new_window">
						<th scope="row"><?php _e("Event Link Target:", $wplc_domain); ?></th>
						<td>
							<input type="radio" name="wplc_open_links_in_new_window" id="wplc_open_links_in_new_window0" value="false"<?php echo $open_links_in_new_window ? '' : ' checked=\'checked\''; ?> />
							<label for="wplc_open_links_in_new_window0"><?php _e("Open links in the current window", $wplc_domain); ?></label>
							<br />
							<input type="radio" name="wplc_open_links_in_new_window" id="wplc_open_links_in_new_window1" value="true"<?php echo $open_links_in_new_window ? ' checked=\'checked\'' : ''; ?> />
							<label for="wplc_open_links_in_new_window1"><?php _e("Open links in a new window", $wplc_domain); ?></label>
						</td>
					</tr>
					<tr valign="top" id="nofollow_links">
						<th scope="row"><?php _e("Link No Follow:", $wplc_domain); ?></th>
						<td>
							<input type="checkbox" name="wplc_nofollow_links" id="wplc_nofollow_links" value="true"<?php echo $nofollow_links ? ' checked=\'checked\'' : ''; ?> />
							<label for="wplc_nofollow_links"><?php _e("Set rel=&quot;nofollow&quot; on links", $wplc_domain); ?></label>
						</td>
					</tr>
				</table>
				<input type="hidden" name="action" value="update" />
				<input type="hidden" name="page_options" value="wplc_display_mode,wplc_event_format,wplc_date_format,wplc_use_24hr_time,wplc_hide_same_date,wplc_date2_time_format,wplc_max_events,wplc_advance_days,wplc_show_past_events,wplc_no_events_msg,wplc_manage_items_per_page,wplc_open_links_in_new_window,wplc_nofollow_links" />
				<p class="submit"><input type="submit" name="Submit" value="<?php _e("Update Options &raquo;", $wplc_domain); ?>" class="button" /></p>
			</form>
		</div>
		
		<?php
	}
}
?>