<?php
/*
Plugin Name: WPListCal
Plugin URI: http://www.jonathankern.com/code/wplistcal
Description: WPListCal will display a simple listing of events anywhere on your Wordpress site.
Version: 1.0.2
Author: Jonathan Kern
Author URI: http://www.jonathankern.com

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant and author attributions, this restriction, and the
following disclaimer, must be included in all copies of the Software, in
whole or in part, and all derivative works of the Software, unless such
copies or derivative works are solely in the form of machine-executable 
object code generated by a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

$wplc_db_version = "1.0";
$wplc_domain = "wplistcal";
$wplc_is_setup = false;

// If not running PHP5, define str_ireplace()
if(!function_exists("str_ireplace")) {
	function str_ireplace($search, $replace, $subject){
	   $i = 0;
	   while($pos = strpos(strtolower($subject), $search, $i)){
	       $subject = substr($subject, 0, $pos).$replace.substr($subject, $pos+strlen($search));
	       $i = $pos+strlen($replace);
	   }
	   return $subject;
	}
}

if(!$wplc_is_included) {
	$wplc_is_included = true;
	
	// Localization setup
	function wplc_setup() {
		global $wplc_domain, $wplc_is_setup;
		if($wplc_is_setup)
			return;
		load_plugin_textdomain($wplc_domain, 'wp-content/plugins');
		$wplc_is_setup = true;
	}

	// Plugin DB Installation
	function wplc_install() {
		wplc_setup();
		global $wpdb;
		global $wplc_db_version;
		global $wplc_domain;
	
		$tbl_name = $wpdb->prefix."wplistcal";
	
		// Check if DB exists and add it if necessary
		if($wpdb->get_var("SHOW TABLES LIKE '$tbl_name'") != $tbl_name) {
			$sql = "CREATE TABLE ".$tbl_name."(
				id mediumint(9) NOT NULL AUTO_INCREMENT,
				event_name text NOT NULL,
				event_desc text,
				event_start_time bigint(11) DEFAULT '0' NOT NULL,
				event_end_time bigint(11) DEFAULT '0' NOT NULL,
				PRIMARY KEY  id (id)
			);";
		
			require_once(ABSPATH.'wp-admin/upgrade-functions.php');
			dbDelta($sql);
		
			// Add dummy data
			$welcome_event_name = __("Add events to WPListCal", $wplc_domain);
			$welcome_event_desc = __("Congratulations, you've just installed WPListCal! Now you just need to add your events into the system via event tab in the Write area of the admin panel.", $wplc_domain);
			$welcome_event_start_time = time();
			$welcome_event_end_time = time() + 3600;
		
			$insert = "INSERT INTO ".$tbl_name.
					  " (event_name, event_desc, event_start_time, event_end_time) ".
					  "VALUES('".$wpdb->escape($welcome_event_name)."',
							  '".$wpdb->escape($welcome_event_desc)."',
							  '".$wpdb->escape($welcome_event_start_time)."',
							  '".$wpdb->escape($welcome_event_end_time)."');";
			$results = $wpdb->query($insert);
		
			add_option("wplc_db_version", $wplc_db_version);
			add_option("wplc_tbl_name", $tbl_name);
			add_option("wplc_date_format", "M j, Y g:ia");
			add_option("wplc_display_mode", "list");
			add_option("wplc_event_format", "<strong>%NAME%</strong> &mdash; %START% - %END%\n<div style='margin-left:20px;'>%DESCRIPTION%</div>");
			add_option("wplc_max_events", -1);
			add_option("wplc_show_past_events", false);
			add_option("wplc_manage_items_per_page", 25);
		}
	}

	// Plugin uninstallation
	function wplc_uninstall() {
		wplc_setup();
		global $wplc_domain, $wpdb;
	
		$tbl_name = get_option("wplc_tbl_name");
	
		$sql = "DROP TABLE IF EXISTS ".$wpdb->escape($tbl_name);
		$wpdb->query($sql);
	
		delete_option("wplc_db_version");
		delete_option("wplc_tbl_name");
		delete_option("wplc_date_format");
		delete_option("wplc_display_mode");
		delete_option("wplc_event_format");
		delete_option("wplc_max_events");
		delete_option("wplc_show_past_events");
		delete_option("wplc_manage_items_per_page");
	}

	register_activation_hook(__FILE__, "wplc_install");
	register_deactivation_hook(__FILE__, "wplc_uninstall");

	// Show the event list
	//----------------------------------------------------------------------------------------------
	// Parameters (all optional - defaults are defined on the options page):
	// display_mode (string): Either "list" or "table"
	// event_format (string): The format of the event string. You can use %NAME%, %DESCRIPTION%,
	//	  %START%, and %END% to include event data
	// date_format (string): The format for dates/times. Use the PHP date() format just like
	//	  Wordpress options. Instructions available at http://us.php.net/manual/en/function.date.php
	// max_events (int):  the maximum number of events to display, defaults to -1 (show all)
	// show_past_events (bool): whether to show past events, defaults to false
	function wplc_show_events($display_mode=null, $event_format=null, $date_format=null, $max_events=null, $show_past_events=null) {
		wplc_setup();
		global $wplc_domain, $wpdb;
	
		// Setup default parameter values
		wplc_set_if_null($display_mode, "wplc_display_mode");
		wplc_set_if_null($event_format, "wplc_event_format");
		wplc_set_if_null($date_format, "wplc_date_format");
		wplc_set_if_null($max_events, "wplc_max_events");
		wplc_set_if_null($show_past_events, "wplc_show_past_events");
	
		if(!settype($max_events, "integer")) {
			$max_events = -1;
		}
		if(!is_bool($show_past_events)) {
			$show_past_events = $show_past_events == "true";
		}

		$tbl_name = $wpdb->escape(get_option("wplc_tbl_name"));
	
		// Get events from DB
		$sql = "SELECT id, event_name, event_desc, event_start_time, event_end_time FROM $tbl_name";
		if(!$show_past_events)
			$sql .= " WHERE event_end_time >= ".time();
			
		$sql .= " ORDER BY event_start_time ASC, event_end_time ASC";
		
		if($max_events > -1)
			$sql .= " LIMIT ".$wpdb->escape($max_events);
		
		$events = $wpdb->get_results($sql, ARRAY_A);
	
		// Print events
		if($display_mode == "list")
			$ret = "<ul class='wplc_event_list'>\n";
		elseif($display_mode == "table")
			$ret = "<table class='wplc_table'><tbody>";
		for($i=0; $i<count($events); $i++) {
			// Prepare event string
			$start = date($date_format, $events[$i]['event_start_time']);
			$end = date($date_format, $events[$i]['event_end_time']);
			$cleaned_name = str_replace(" & ", " &amp; ", str_replace('"', "&quot;", stripslashes($events[$i]['event_name'])));
			$cleaned_desc = nl2br(str_replace(" & ", " &amp; ", str_replace('"', "&quot;", stripslashes(stripslashes($events[$i]['event_desc'])))));
		
			if($display_mode == "list") {
				$evt = str_replace("%NAME%", $cleaned_name, $event_format);
				$evt = str_replace("%DESCRIPTION%", $cleaned_desc, $evt);
				$evt = str_replace("%START%", $start, $evt);
				$evt = str_replace("%END%", $end, $evt);
				$evt = str_replace("%ID%", $events[$i]['id'], $evt);
				$ret .= "<li>".$evt."</li>";
			}
			elseif($display_mode == "table") {
				$ret .= "<tr>\n\t"
							."<td class='wplc_event_name'>".stripslashes($events[$i]['event_name'])."</td>\n\t"
							."<td class='wplc_event_start_time'>".$start."</td>\n\t"
							."<td class='wplc_event_end_time'>".$end."</td>\n"
						."</tr>\n"
						."<tr>\n\t"
							."<td class='wplc_event_desc' colspan='3'>".nl2br(stripslashes(stripslashes($events[$i]['event_desc'])))."</td>\n"
						."</tr>";
			}
		}
		if($display_mode == "list")
			$ret .= "</ul>";
		elseif($display_mode == "table")
			$ret .= "</tbody></table>";
		return $ret;
	}
	
	// Content filter to place a calendar on a post or page
	add_filter("the_content", "wplc_content_filter");
	function wplc_content_filter($content) {
		return str_ireplace("<!--wplistcal-->", wplc_show_events(), $content);
	}

	function wplc_set_if_null(&$var, $option_id) {
		if(is_null($var))
			$var = get_option($option_id);
	}

	function wplc_show_event_form($event=array(), $message=null) {
		wplc_setup();
		global $wplc_domain;
	
		// Prep event times
		$d = $event['event_start_time'];
		if(empty($d))
			$d = time();
		$date['event_start_month'] = date('n', $d);
		$date['event_start_day'] = date('j', $d);
		$date['event_start_year'] = date('Y', $d);
		$date['event_start_hour'] = date('g', $d);
		$date['event_start_minute'] = date('i', $d);
		$date['event_start_ampm'] = date('A', $d);
		
		$d = $event['event_end_time'];
		if(empty($d))
			$d = time() + 3600;
		$date['event_end_month'] = date('n', $d);
		$date['event_end_day'] = date('j', $d);
		$date['event_end_year'] = date('Y', $d);
		$date['event_end_hour'] = date('g', $d);
		$date['event_end_minute'] = date('i', $d);
		$date['event_end_ampm'] = date('A', $d);
		
		if(!is_null($message)) {
		?>
			<div id="message" class="updated fade">
				<p>
					<?php echo $message; ?>
				</p>
			</div>
		<?php
		}
		?>
		<div class="wrap">
			<form name="event" id="event" method="post" action="<?php echo $PHP_SELF; ?>">
				<h2><?php echo count($event) != 0 ? "Edit" : "Add"; ?> Event</h2>
				<input type="hidden" name="action" value="submitted" />
				<?php
				if(count($event) != 0) {
				?>
					<input type="hidden" name="id" value="<?php echo $event['id']; ?>" />
				<?php
				}
				?>
				<fieldset id="titlediv">
					<legend><?php _e('Event Name', $wplc_domain); ?></legend>
					<div><input type="text" name="event_name" size="30" value="<?php echo stripslashes($event['event_name']); ?>" id="title" /></div>
				</fieldset>

				<fieldset id="startdiv">
					<legend><?php _e('Start Date/Time', $wplc_domain); ?></legend>
					<div>
						<?php
							$s[$date['event_start_month']] = " selected='selected'";
						?>
						<select name="start-month" id="start-month" onchange="wplc_matchValue('start-month', 'end-month', true);">
							<option value="1"<?php echo $s['1']; ?>><?php _e('Jan', $wplc_domain); ?></option>
							<option value="2"<?php echo $s['2']; ?>><?php _e('Feb', $wplc_domain); ?></option>
							<option value="3"<?php echo $s['3']; ?>><?php _e('Mar', $wplc_domain); ?></option>
							<option value="4"<?php echo $s['4']; ?>><?php _e('Apr', $wplc_domain); ?></option>
							<option value="5"<?php echo $s['5']; ?>><?php _e('May', $wplc_domain); ?></option>
							<option value="6"<?php echo $s['6']; ?>><?php _e('Jun', $wplc_domain); ?></option>
							<option value="7"<?php echo $s['7']; ?>><?php _e('Jul', $wplc_domain); ?></option>
							<option value="8"<?php echo $s['8']; ?>><?php _e('Aug', $wplc_domain); ?></option>
							<option value="9"<?php echo $s['9']; ?>><?php _e('Sep', $wplc_domain); ?></option>
							<option value="10"<?php echo $s['10']; ?>><?php _e('Oct', $wplc_domain); ?></option>
							<option value="11"<?php echo $s['11']; ?>><?php _e('Nov', $wplc_domain); ?></option>
							<option value="12"<?php echo $s['12']; ?>><?php _e('Dec', $wplc_domain); ?></option>
						</select>
						<input type="text" name="start-day" id="start-day" size="2" maxlength="2" value="<?php echo $date['event_start_day']; ?>" onblur="wplc_matchValue('start-day', 'end-day', false);" />
						<input type="text" name="start-year" id="start-year" size="4" maxlength="4" value="<?php echo $date['event_start_year']; ?>" onblur="wplc_matchValue('start-year', 'end-year', false);" />
						@ <input type="text" name="start-hour" id="start-hour" size="2" maxlength="2" value="<?php echo $date['event_start_hour']; ?>" onblur="wplc_matchValue('start-hour', 'end-hour', false);" />
						: <input type="text" name="start-minute" id="start-minute" size="2" maxlength="2" value="<?php echo $date['event_start_minute']; ?>" onblur="wplc_matchValue('start-minute', 'end-minute', false);" />
						<?php
							$s[$date['event_start_ampm']] = " selected='selected'";
						?>
						<select name="start-ampm" id="start-ampm" onchange="wplc_matchValue('start-ampm', 'end-ampm', true);">
							<option value="AM"<?php echo $s['AM']; ?>>AM</option>
							<option value="PM"<?php echo $s['PM']; ?>>PM</option>
						</select>
					</div>
				</fieldset>
		
				<fieldset id="enddiv">
					<legend><?php _e('End Date/Time', $wplc_domain); ?></legend>
					<div>
						<?php
							unset($s);
							$s[$date['event_end_month']] = " selected='selected'";
						?>
						<select name="end-month" id="end-month" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;">
							<option value="1"<?php echo $s['1']; ?>><?php _e('Jan', $wplc_domain); ?></option>
							<option value="2"<?php echo $s['2']; ?>><?php _e('Feb', $wplc_domain); ?></option>
							<option value="3"<?php echo $s['3']; ?>><?php _e('Mar', $wplc_domain); ?></option>
							<option value="4"<?php echo $s['4']; ?>><?php _e('Apr', $wplc_domain); ?></option>
							<option value="5"<?php echo $s['5']; ?>><?php _e('May', $wplc_domain); ?></option>
							<option value="6"<?php echo $s['6']; ?>><?php _e('Jun', $wplc_domain); ?></option>
							<option value="7"<?php echo $s['7']; ?>><?php _e('Jul', $wplc_domain); ?></option>
							<option value="8"<?php echo $s['8']; ?>><?php _e('Aug', $wplc_domain); ?></option>
							<option value="9"<?php echo $s['9']; ?>><?php _e('Sep', $wplc_domain); ?></option>
							<option value="10"<?php echo $s['10']; ?>><?php _e('Oct', $wplc_domain); ?></option>
							<option value="11"<?php echo $s['11']; ?>><?php _e('Nov', $wplc_domain); ?></option>
							<option value="12"<?php echo $s['12']; ?>><?php _e('Dec', $wplc_domain); ?></option>
						</select>
						<input type="text" name="end-day" id="end-day" size="2" maxlength="2" value="<?php echo $date['event_end_day']; ?>" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;" />
						<input type="text" name="end-year" id="end-year" size="4" maxlength="4" value="<?php echo $date['event_end_year']; ?>" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;" />
						@ <input type="text" name="end-hour" id="end-hour" size="2" maxlength="2" value="<?php echo $date['event_end_hour']; ?>" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;" />
						: <input type="text" name="end-minute" id="end-minute" size="2" maxlength="2" value="<?php echo $date['event_end_minute']; ?>" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;" />
						<?php
							$s[$date['event_end_ampm']] = " selected='selected'";
						?>
						<select name="end-ampm" id="end-ampm" onfocus="editable = true;" onblur="editable = false;" onchange="fieldsDirty = editable ? true : fieldsDirty;">
							<option value="AM"<?php echo $s['AM']; ?>>AM</option>
							<option value="PM"<?php echo $s['PM']; ?>>PM</option>
						</select>
					</div>
				</fieldset>
		
				<fieldset id="descriptiondiv">
					<legend><?php _e('Description', $wplc_domain); ?></legend>
					<div>
						<?php
							the_editor(stripslashes(stripslashes($event['event_desc'])));
						?>
					</div>
				</fieldset>
		
				<p class="submit">
					<input name="save" type="submit" id="save" value="<?php _e('Save and Continue Editing'); ?>" />
					<input name="submit" type="submit" id="submit" value="Save" style="font-weight:bold;" />
				</p>
			</form>
		</div>
		<?php
	}

	function wplc_process_event($postvars) {
		wplc_setup();
		global $wplc_domain, $wpdb;
	
		$gobacktoeditform = !empty($postvars['save']);
	
		$name = addslashes($postvars['event_name']);
		$description = addslashes($postvars['content']);
		
		$tbl_name = $wpdb->escape(get_option("wplc_tbl_name"));
	
		// Get timestamps from date/time info
		$startstr = addslashes($postvars['start-year'])."-".
					$postvars['start-month']."-".
					addslashes($postvars['start-day'])." ".
					addslashes($postvars['start-hour']).":".
					addslashes($postvars['start-minute']).
					$postvars['start-ampm'];
		$endstr = addslashes($postvars['end-year'])."-".
					$postvars['end-month']."-".
					addslashes($postvars['end-day'])." ".
					addslashes($postvars['end-hour']).":".
					addslashes($postvars['end-minute']).
					$postvars['end-ampm'];
		$start = strtotime($startstr);
		$end = strtotime($endstr);
	
		// Validation & Error Handling
		// If name is empty, just refresh the post page
		if(empty($name)) {
			wplc_show_event_form();
			return;
		}
		// If start time is invalid, use NOW
		if($start === -1 || $start === false)
			$start = time();
		// If end time is invalid, use start
		if($end === -1 || $end === false)
			$end = $start;
		// If end is before start time, set end to start
		if($end < $start)
			$end = $start;
		
		// Add data to db
		if(empty($postvars['id'])) {
			$insert = "INSERT INTO ".$tbl_name.
					  " (event_name, event_desc, event_start_time, event_end_time) ".
					  "VALUES('".$wpdb->escape($name)."',
							  '".$wpdb->escape($description)."',
							  '".$wpdb->escape($start)."',
							  '".$wpdb->escape($end)."');";
			$results = $wpdb->query($insert);
		}
		else {
			$update = "UPDATE ".$tbl_name.
				  	  " SET event_name='".$wpdb->escape($name)."',".
					  "event_desc='".$wpdb->escape($description)."',".
					  "event_start_time='".$wpdb->escape($start)."',".
					  "event_end_time='".$wpdb->escape($end)."' ".
					  "WHERE id=".$wpdb->escape($postvars['id']);
			$results = $wpdb->query($update);
		}
		
		$msg = empty($postvars['id']) ? __("Event Added", $wplc_domain) : __("Event Updated", $wplc_domain);
		
		if($gobacktoeditform) {
			$id = empty($postvars['id']) ? $wpdb->insert_id : $postvars['id'];
			$sql = "SELECT * FROM ".$wpdb->escape(get_option("wplc_tbl_name"))." WHERE id=".$wpdb->escape($id);
			$event = $wpdb->get_results($sql, ARRAY_A);
	
			// Show edit form
			wplc_show_event_form($event[0], $msg);
		}
		else {
			wplc_show_event_form(array(), $msg);
		}
	}

	function wplc_show_admin_write_page() {
		wplc_setup();
		global $wplc_domain;
	
		if(isset($_GET['id'])) {
			wplc_show_admin_edit_page($_GET['id']);
			return;
		}
	
		$action = $_POST['action'];
		if($action == "submitted") {
			wplc_process_event($_POST);
		}
		else
			wplc_show_event_form();
	}

	add_action('admin_menu', 'wplc_add_admin_pages');
	function wplc_add_admin_pages() {
		wplc_setup();
		global $wplc_domain;
		
		add_submenu_page("post.php", __("WPListCal - Add Event", $wplc_domain), __("Add Event", $wplc_domain), 2, __FILE__, "wplc_show_admin_write_page");
		add_management_page(__("WPListCal - Manage Events", $wplc_domain), __("Events", $wplc_domain), 2, __FILE__, "wplc_show_admin_manage_page");
		add_options_page(__("WPListCal - Options", $wplc_domain), __("WPListCal", $wplc_domain), 6, __FILE__, "wplc_show_admin_options_page");
	}
	
	add_action('admin_print_scripts', 'wplc_js_admin_header');
	function wplc_js_admin_header() {
		wp_print_scripts(array('sack'));
		?>
		<script type="text/javascript" charset="utf-8">
		//<![CDATA[
		function wplcDeleteEvent(id, msg) {
			if(confirm(msg)) {
				var mysack = new sack("<?php bloginfo( 'wpurl' ); ?>/wp-admin/admin-ajax.php" );
				mysack.execute = 1;
				mysack.method = 'POST';
				mysack.setVar("action", "wplc_delete_event");
				mysack.setVar("id", id);
				mysack.encVar("cookie", document.cookie, false);
				mysack.onError = function() { alert('AJAX error in deleting event'); };
				mysack.onCompletion = function() { 
					if(mysack.responseStatus[0] == 200) {
						var row = document.getElementById('event-'+id);
						if(row != null && row.parentNode != null)
							row.parentNode.removeChild(row);
					}	
				}
				mysack.runAJAX();
				
				return true;
			}
		}
		
		function wplc_changeDisabled(id, disabled) {
			var elm = document.getElementById(id);
			if(elm != null && elm.disabled != disabled)
				elm.disabled = disabled;
		}
		
		var fieldsDirty = false;
		var editable = false;
		function wplc_matchValue(myid, matchid, isselect) {
			if(fieldsDirty)
				return;
				
			var me = document.getElementById(myid);
			var you = document.getElementById(matchid);
			
			if(isselect) {
				you.selectedIndex = me.selectedIndex;
			}
			else {
				you.value = me.value;
			}
		}
		//]]>
		</script>
		<?php
	}
	
	add_action("wp_ajax_wplc_delete_event", "wplc_delete_event");
	function wplc_delete_event() {
		wplc_setup();
		global $wplc_domain, $wpdb;
		
		$id = $wpdb->escape($_POST['id']);
		$tbl_name = $wpdb->escape(get_option("wplc_tbl_name"));
		
		$sql = "DELETE FROM ".$tbl_name." WHERE id=".$id;
		$wpdb->query($sql);
	}

	function wplc_show_admin_manage_page() {
		wplc_setup();
		global $wplc_domain, $wpdb;
		
		if($_POST['action'] == "delete") {
			wplc_delete_event($_POST['id']);
			return;
		}
	
		$itemsperpage = get_option("wplc_manage_items_per_page");
		$page = $_GET['wplc_pg'];
		if(isset($page)) {
			$offset = $itemsperpage * ($page-1);
		}
		else {
			$offset = 0;
			$page = 1;
		}
		
		// Check how many events there are
		$sql = "SELECT ID FROM ".$wpdb->escape(get_option("wplc_tbl_name"));
		$wpdb->query($sql);
		$totalevents = $wpdb->num_rows;
		
	
		// Get events for this page
		$sql = "SELECT id, event_name, event_start_time, event_end_time"
			 ." FROM ".$wpdb->escape(get_option("wplc_tbl_name"))
			 ." ORDER BY event_start_time DESC, event_end_time DESC"
			 ." LIMIT ".$wpdb->escape($offset).", ".$wpdb->escape($itemsperpage);
		$events = $wpdb->get_results($sql, ARRAY_A);
	
		$dateformat = __('D, M j, Y @ g:ia', $wplc_domain);
		
		$delmsg = __("You are about to delete the event \'%s\'. \\n\'OK\' to delete, \'Cancel\' to stop.", $wplc_domain);
	
		?>
		
		<div class="wrap">
			<h2><?php _e("Events", $wplc_domain); ?></h2>
	
			<table class="widefat">
				<thead>
					<tr>
						<th scope="col" style="text-align:center;"><?php _e("ID", $wplc_domain); ?></th>
						<th scope="col"><?php _e("Event Name", $wplc_domain); ?></th>
						<th scope="col"><?php _e("Start Date/Time", $wplc_domain); ?></th>
						<th scope="col"><?php _e("End Date/Time", $wplc_domain); ?></th>
						<th scope="col" colspan="2" style="text-align:center;"><?php _e("Action", $wplc_domain); ?></th>
					</tr>
				</thead>
				<tbody>
	
				<?php
				for($i=0; $i<count($events); $i++) {
					$class = $i % 2 == 0 ? " class='alternate'" : "";
					$start = date($dateformat, $events[$i]['event_start_time']);
					$end = date($dateformat, $events[$i]['event_end_time']);
				?>
	
					<tr id="event-<?php echo $events[$i]['id']; ?>" <?php echo $class; ?>>
						<th scope="row" style="text-align:center;"><?php echo $events[$i]['id']; ?></th>
						<td><?php echo $events[$i]['event_name']; ?></td>
						<td><?php echo $start; ?></td>
						<td><?php echo $end; ?></td>
						<td><a href="post-new.php?id=<?php echo $events[$i]['id']; ?>&amp;page=wplistcal.php" class="edit"><?php _e("Edit", $wplc_domain); ?></a></td>
						<td><a href="javascript:;" onclick="wplcDeleteEvent(<?php echo $events[$i]['id']; ?>, '<?php echo sprintf($delmsg, $events[$i]['event_name']); ?>');" class="delete"><?php _e("Delete", $wplc_domain); ?></a></td>
					</tr>
	
				<?php
				}
				?>
		
				</tbody>
			</table>
			<?php
			if($offset + $itemsperpage < $totalevents) {
				echo "<p><a href='edit.php?wplc_pg=".($page+1)."&amp;page=wplistcal.php'>";
				_e("&laquo; Previous Events", $wplc_domain);
				echo "</a>";
				$prevshown = true;
			}
			if($page > 1) {
				if($prevshown)
					echo " | ";
				else
					echo "<p>";
				echo "<a href='edit.php?wplc_pg=".($page-1)."&amp;page=wplistcal.php'>";
				_e("Next Events &raquo;", $wplc_domain);
				echo "</a>";
				$nextshown = true;
			}
			if($prevshown || $nextshown)
				echo "</p>";
			?>
			<h3><a href="post-new.php?page=wplistcal.php">Add New Event &raquo;</a></h3>
		</div>
		<?php
	}

	function wplc_show_admin_edit_page($id) {
		wplc_setup();
		global $wplc_domain, $wpdb;
	
		$action = $_POST['action'];
		if($action == "submitted") {
			wplc_process_event($_POST);
		}
		else {
			// Lookup event data for $id
			$sql = "SELECT * FROM ".$wpdb->escape(get_option("wplc_tbl_name"))." WHERE id=".$wpdb->escape($id);
			$event = $wpdb->get_results($sql, ARRAY_A);
	
			// Show edit form
			wplc_show_event_form($event[0]);
		}
	}
	
	function wplc_show_admin_options_page() {
		wplc_setup();
		global $wplc_domain;
		
		?>
		
		<div class="wrap">
			<form method="post" action="options.php">
				<?php wp_nonce_field('update_options'); ?>
				<h2><?php _e("WPListCal Options", $wplc_domain); ?></h2>
				<p class="submit"><input type="submit" name="Submit" value="<?php _e("Update Options &raquo;", $wplc_domain); ?>" /></p>
				<table width="100%" cellspacing="2" cellpadding="5" class="optiontable editform">
					<tr valign="top" id="displaymode">
						<th width="33%" scope="row"><?php _e("Display Mode:", $wplc_domain); ?></th>
						<td>
							<input type="radio" name="wplc_display_mode" value="list" id="wplc_display_mode_list" onclick="wplc_changeDisabled('wplc_event_format', false);"<?php echo get_option('wplc_display_mode') == 'list' ? "checked='checked'" : ""; ?> />
								<label for="wplc_display_mode_list"><?php _e("Show events in an unordered list <em>(Default)</em>", $wplc_domain); ?></label>
							<br />
							<fieldset style="margin-left: 25px;">
								<legend style="float:left; margin-top:2px;"><?php _e("Event Format", $wplc_domain); ?> <a href="javascript:;" title="<?php _e("The following variables are available: %NAME%, %START%, %END%, %DESCRIPTION%", $wplc_domain); ?>" style="cursor:help;" />?</a>:</legend>
								<div>
									<textarea name="wplc_event_format" id="wplc_event_format" style="width:350px; height:50px;"<?php echo get_option('wplc_display_mode') == 'list' ? "" : "disabled='disabled'"; ?>><?php echo htmlentities(get_option('wplc_event_format')); ?></textarea>
								</div>
							</fieldset>
							<input type="radio" name="wplc_display_mode" value="table" id="wplc_display_mode_table" onclick="wplc_changeDisabled('wplc_event_format', true);"<?php echo get_option('wplc_display_mode') == 'table' ? "checked='checked'" : ""; ?> />
								<label for="wplc_display_mode_table"><?php _e("Show events in a table", $wplc_domain); ?></label>
						</td>
					</tr>
					<tr valign="top" id="dateformat">
						<th scope="row"><?php _e("Date/Time Format:", $wplc_domain); ?></th>
						<td>
							<input type="text" name="wplc_date_format" value="<?php echo get_option('wplc_date_format'); ?>" /><br />
							<strong><?php _e("Output:", $wplc_domain); ?></strong> <?php echo date(get_option('wplc_date_format'), time()); ?><br /><br />
							<a href="http://codex.wordpress.org/Formatting_Date_and_Time">Documentation on date formatting.</a> Click &quot;Update Options&quot; to update sample output.
						</td>
					</tr>
					<tr valign="top" id="maxevents">
						<th scope="row"><?php _e("Maximum Displayed Events:", $wplc_domain); ?></th>
						<td>
							<input type="text" name="wplc_max_events" size="4" value="<?php echo get_option('wplc_max_events'); ?>" /><br />
							<?php _e("How many events to display in the event list, -1 for no limit", $wplc_domain); ?>
						</td>
					</tr>
					<tr valign="top" id="showpastevents">
						<th scope="row"><?php _e("Past Events:", $wplc_domain); ?></th>
						<td>
							<input type="radio" name="wplc_show_past_events" value="false" id="wplc_show_past_events_false"<?php echo get_option('wplc_show_past_events') == 'false' ? "checked='checked'" : ""; ?> />
								<label for="wplc_show_past_events_false"><?php _e("Only show current and future events", $wplc_domain); ?></label>
							<br />
							<input type="radio" name="wplc_show_past_events" value="true" id="wplc_show_past_events_true"<?php echo get_option('wplc_show_past_events') == 'true' ? "checked='checked'" : ""; ?> />
								<label for="wplc_show_past_events_true"><?php _e("Show all events, even if they have already occurred", $wplc_domain); ?></label>
						</td>
					</tr>
					<tr valign="top" id="adminperpage">
						<th scope="row"><?php _e("Admin Items Per Page:", $wplc_domain); ?></th>
						<td>
							<input type="text" name="wplc_manage_items_per_page" size="4" value="<?php echo get_option('wplc_manage_items_per_page'); ?>" /><br />
							<?php _e("How many events to display per page on the Manage Events admin page", $wplc_domain); ?>
						</td>
					</tr>
				</table>
				<input type="hidden" name="action" value="update" />
				<input type="hidden" name="page_options" value="wplc_display_mode,wplc_event_format,wplc_date_format,wplc_max_events,wplc_show_past_events,wplc_manage_items_per_page" />
				<p class="submit"><input type="submit" name="Submit" value="<?php _e("Update Options &raquo;", $wplc_domain); ?>" /></p>
			</form>
		</div>
		
		<?php
	}
}
?>
