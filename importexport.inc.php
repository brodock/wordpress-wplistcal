<?php
/*
WPListCal Import/Export functions

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant and author attributions, this restriction, and the
following disclaimer, must be included in all copies of the Software, in
whole or in part, and all derivative works of the Software, unless such
copies or derivative works are solely in the form of machine-executable 
object code generated by a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

function set_tz_by_offset($offset) {
	$abbrarray = timezone_abbreviations_list();
	foreach ($abbrarray as $abbr) {
		foreach ($abbr as $city) {
			if ($city['offset'] == $offset) { // remember to multiply $offset by -1 if you're getting it from js
				date_default_timezone_set($city['timezone_id']);
				return true;
			}
		}
	}	
	date_default_timezone_set("ust");
	return false;
}
set_tz_by_offset(get_option("gmt_offset"));

require_once("iCalcreator.class.php");

function wplc_export_events($id=null) {
	global $wpdb;
	
	$blog_title = get_bloginfo("name");
	
	// Create calendar
	$cal = new vcalendar();
	$cal->setConfig("unique_id", "wplc_".$blog_title.$id);
	$cal->setProperty("method", "PUBLISH");
	
	// Get events
	$tbl_name = $wpdb->escape(get_option("wplc_tbl_name"));
	$sql = "SELECT e.*, u.display_name as event_author FROM $tbl_name e LEFT JOIN $wpdb->users u ON e.event_author=u.user_login";
	if(!is_null($id)) {
		$sql .= " WHERE e.id=".$wpdb->escape($id);
	}
	$sql .= " ORDER BY event_start_time ASC, event_end_time ASC";
	$wpdb->show_errors();
	$events = $wpdb->get_results($sql, ARRAY_A);
	
	// Create events
	for($i=0; $i<count($events); $i++) {
		// Create start and end date arrays
		$start_date = wplc_time_to_ical_array($events[$i]['event_start_time']);
		$end_date = wplc_time_to_ical_array($events[$i]['event_end_time']);
		$create_date = wplc_time_to_ical_array($events[$i]['event_create_time']);
		$mod_date = wplc_time_to_ical_array($events[$i]['event_modified_time']);
		
		$ev = new vevent();
		$ev->setProperty("summary", str_replace(" & ", " &amp; ", str_replace('"', "&quot;", stripslashes(stripslashes($events[$i]['event_name'])))));
		$ev->setProperty("url", htmlspecialchars(stripslashes(stripslashes($events[$i]['event_link']))));
		$ev->setProperty("location", $events[$i]['event_loc']);
		$ev->setProperty("dtstart", $start_date);
		$ev->setProperty("dtend", $end_date);
		$ev->setProperty("description", nl2br(htmlspecialchars_decode(str_replace(" & ", " &amp; ", str_replace('"', "&quot;", stripslashes(stripslashes($events[$i]['event_desc'])))))));
		$ev->setProperty("organizer", $events[$i]['event_author']);
		$ev->setProperty("created", $create_date);
		$ev->setProperty("last-modified", $mod_date);
		
		$cal->setComponent($ev);
	}
	
	$dir = get_option("wplc_upload_dir");
	$url = get_option("wplc_upload_url");
	
	if(empty($dir) || empty($url)) {
		wplc_init_upload_dir_settings();
		$dir = get_option("wplc_upload_dir");
		$url = get_option("wplc_upload_url");
	}
	
	@unlink($dir."events.ics");
	$cal->saveCalendar($dir, "events.ics");
	
	?>
	<script type="text/javascript" charset="utf-8">
		window.location = '<?php echo $url."events.ics"; ?>';
	</script>
	<?php
}

function wplc_import_events($file) {
	// TODO: Implement this
}

function wplc_time_to_ical_array($time) {
	return array(
		"year"	=> (int)date('Y', $time),
		"month" => (int)date('n', $time),
		"day"	=> (int)date('j', $time),
		"hour"	=> (int)date('G', $time),
		"min"	=> (int)date('i', $time),
		"sec"	=> 0);
}
?>